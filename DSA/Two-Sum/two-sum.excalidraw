{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "XCgxWJ6UkRN1rObEvG5AM",
      "type": "text",
      "x": 192.24386156839995,
      "y": 14.44921875,
      "width": 209.9402096024579,
      "height": 88.24337844575228,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [
        "4vF01CerF98ttpPAcOgHV"
      ],
      "frameId": null,
      "index": "b0E",
      "roundness": null,
      "seed": 841853686,
      "version": 1188,
      "versionNonce": 1911293866,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743539872997,
      "link": null,
      "locked": false,
      "text": "Two Sum\n",
      "fontSize": 35.29735137830092,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Two Sum\n",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "Nme8bIsVeGI3GalWon_ub",
      "type": "text",
      "x": 186.49322509765625,
      "y": 60.32421875,
      "width": 446.65417480468756,
      "height": 293.41029117554433,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [
        "4vF01CerF98ttpPAcOgHV"
      ],
      "frameId": null,
      "index": "b0F",
      "roundness": null,
      "seed": 2003059766,
      "version": 775,
      "versionNonce": 53743158,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743539888140,
      "link": null,
      "locked": false,
      "text": "Given an array of integers nums and an integer target,\nreturn indices of the two numbers such that they add\nup to target.\n\nYou may assume that each input would have exactly\none solution, and you may not use the same element\ntwice.\n\nYou can return the answer in any order.\n\nVariants :\nThree Sum\nWhat if the Array is Sorted?\nSubArray of Nums Equal K",
      "fontSize": 16.766302352888246,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nYou can return the answer in any order.\n\nVariants :\nThree Sum\nWhat if the Array is Sorted?\nSubArray of Nums Equal K",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "kMixJw9rBtOUKY34F2DrU",
      "type": "text",
      "x": 199.61328125,
      "y": 412.7734375,
      "width": 62.0479736328125,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0G",
      "roundness": null,
      "seed": 1582617066,
      "version": 93,
      "versionNonce": 747391030,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743538455600,
      "link": null,
      "locked": false,
      "text": "Java",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Java",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "aR7QswtPlZDwmFC6tyBQ1",
      "type": "text",
      "x": 194.5234375,
      "y": 737.87890625,
      "width": 97.27195739746094,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0H",
      "roundness": null,
      "seed": 173328362,
      "version": 403,
      "versionNonce": 96131510,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743538469688,
      "link": null,
      "locked": false,
      "text": "Python",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Python",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "XlnaYu1104-3E0s5o6IvR",
      "type": "text",
      "x": 913.1796875,
      "y": 154.01953125,
      "width": 267.95989990234375,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0I",
      "roundness": null,
      "seed": 436992886,
      "version": 116,
      "versionNonce": 1311240566,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743536743874,
      "link": null,
      "locked": false,
      "text": "Common Approaches",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Common Approaches",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "wKE16d5VTciK46CKp1gN9",
      "type": "text",
      "x": 906.6953125,
      "y": 201.72265625,
      "width": 706.0994873046875,
      "height": 300,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0J",
      "roundness": null,
      "seed": 720755626,
      "version": 585,
      "versionNonce": 175377014,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743538279267,
      "link": null,
      "locked": false,
      "text": "Two Pointer Approach\nPut a pointer at the left of the input.\nAdd another pointer to the the right of first pointer and iterate.\nIf two numbers equal to the target, then return the new of the indices.\n\n//Pseudocode  \nfor(int x = 0 ; x< length - 1; x++){\nfor(int y = x +1 ; y < length ; y++){\n    if(arr[x]  + arr[y] == sum)\n        return new {x, y}\n}\n}",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Two Pointer Approach\nPut a pointer at the left of the input.\nAdd another pointer to the the right of first pointer and iterate.\nIf two numbers equal to the target, then return the new of the indices.\n\n//Pseudocode  \nfor(int x = 0 ; x< length - 1; x++){\nfor(int y = x +1 ; y < length ; y++){\n    if(arr[x]  + arr[y] == sum)\n        return new {x, y}\n}\n}",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "evklhC0zB_BeNqnScWO9s",
      "type": "text",
      "x": 909.765625,
      "y": 547.046875,
      "width": 169.11988830566406,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0L",
      "roundness": null,
      "seed": 307660202,
      "version": 31,
      "versionNonce": 1184095926,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743538195756,
      "link": null,
      "locked": false,
      "text": "HashMap Solution",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "HashMap Solution",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "CCDA0DiNfr0BBczQ2eulV",
      "type": "text",
      "x": 893.921875,
      "y": 578.7109375,
      "width": 524.18701171875,
      "height": 400,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0M",
      "roundness": null,
      "seed": 120421174,
      "version": 1060,
      "versionNonce": 868994410,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743538401578,
      "link": null,
      "locked": false,
      "text": "Create a map with the key being the element and\nvalue being the index.\nIterate through array one time. \nIf sum - current element is not a value, store teh\ncurrent value.\nIf it is a value, then return the index of current and\nthe index the map.get returns\n\n//Pseudocode\nmap<Integer, Integer> -> {Element, Index}\nfor(int x = 0; x< length;x++){\nif(map.has(sum - currrentElement))\n    return {map.get(sum - currentElement), x)\nmap.put(currentElement, x);\n}\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Create a map with the key being the element and value being the index.\nIterate through array one time. \nIf sum - current element is not a value, store teh current value.\nIf it is a value, then return the index of current and the index the map.get returns\n\n//Pseudocode\nmap<Integer, Integer> -> {Element, Index}\nfor(int x = 0; x< length;x++){\nif(map.has(sum - currrentElement))\n    return {map.get(sum - currentElement), x)\nmap.put(currentElement, x);\n}\n",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "2Rz2MzUAubsIZZOHfxsGk",
      "type": "text",
      "x": 199.609375,
      "y": 454.765625,
      "width": 627.6995849609375,
      "height": 275,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0N",
      "roundness": null,
      "seed": 554485866,
      "version": 427,
      "versionNonce": 832268278,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743538456950,
      "link": null,
      "locked": false,
      "text": "public int[] twoSum(int[] nums, int target) {\n        Map< Integer, Integer> numMap = new HashMap<>();\n        //numMap.put(nums[0], 0);\n        for(int x = 0; x< nums.length; x++){\n            if(numMap.containsKey(target - nums[x]))\n                return new int[]{numMap.get(target - nums[x]), x};\n            numMap.put(nums[x],x);\n        }\n        return new int[]{-1,-1};\n\n    }",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "public int[] twoSum(int[] nums, int target) {\n        Map< Integer, Integer> numMap = new HashMap<>();\n        //numMap.put(nums[0], 0);\n        for(int x = 0; x< nums.length; x++){\n            if(numMap.containsKey(target - nums[x]))\n                return new int[]{numMap.get(target - nums[x]), x};\n            numMap.put(nums[x],x);\n        }\n        return new int[]{-1,-1};\n\n    }",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "akS10eBNTg2-iUaf-Q7Kn",
      "type": "text",
      "x": 196.19403076171875,
      "y": 784.8046875,
      "width": 439.6197509765625,
      "height": 200,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0e",
      "roundness": null,
      "seed": 1608213174,
      "version": 90,
      "versionNonce": 1013541366,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743539796394,
      "link": null,
      "locked": false,
      "text": "def twoSum(self, nums, target):\n        hashmap = {}\n        for i in range(len(nums)):\n            complement = target - nums[i]\n            if complement in hashmap:\n                return [i, hashmap[complement]]\n            hashmap[nums[i]] = i\n        return []",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "def twoSum(self, nums, target):\n        hashmap = {}\n        for i in range(len(nums)):\n            complement = target - nums[i]\n            if complement in hashmap:\n                return [i, hashmap[complement]]\n            hashmap[nums[i]] = i\n        return []",
      "autoResize": true,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}